<------- Docker Steps ------->

Steps:

1.) install docker with this link and choose docker for windows wsl enabled (https://www.docker.com/)

2.) install wsl in windows using this command (wsl --install) if not installed

3.) to check wsl installed or not (type command: wsl)

4.) to check version of the docker use command: (docker -v) or (docker -version)
	Docker version 27.2.0, build 3ab4256

5.) to run docker use command: docker run image_name 
	for example: docker run hello-world

6.) to check how many images are there use command: docker images

	REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
	hello-world   latest    91fb4b041da2   17 months ago   24.4kB
	openjdk       latest    9b448de897d2   20 months ago   727MB
	openjdk       17        528707081fdb   2 years ago     727MB

7.) to pull any image from the docker hub use command: docker pull openjdk (for example)

8.) to pull specific version of any image from docker hub use command: docker pull openjdk:17

9.) to search any image in docker hub use command: docker search image_name 
	for example: docker search MySQL (it will tell you whether specific image is available in docker hub or not for pulling purpose)

10.) to check if any container is running or not use command: docker ps (it will run and stop not visible because it will not start on interactive mode which is: -it)

11.) to check all running container which is created use command: docker ps -a (-a for all)

12.) to run specific docker image with specified container_name and interactive mode(cmd:> -it) and detached mode (cmd:> -d) enabled so that it will visible basically detached means it will running on background when we check all container which is running so it will have to show then use command: docker run --name javaContainer -it -d openjdk

13.) whenever you will hit command (step 12) it will give you some id like: eba58cbe601203941399efc4212c75c69e0d92296c01468f5c8556176d5a6ab1

14.) then check whether this container is running or not use command: docker ps (step 10) it will give you

	CONTAINER ID   IMAGE     COMMAND    CREATED         STATUS         PORTS     NAMES
	eba58cbe6012   openjdk   "jshell"   7 seconds ago   Up 6 seconds             javaContainer

15.) if we want to execute container and want to work inside and want to enter inside the container then use command: docker exec -it javaContainer jshell

	|  Welcome to JShell -- Version 18.0.2.1
	|  For an introduction type: /help intro

	jshell>System.out.println("hello world")
	hello world
	
	jshell> /exit
	|  Goodbye

16.) to run mysql use environment variable (-e) then mysql_root_password with = password
	cmd:> docker run --name mysqlDb -e MYSQL_ROOT_PASSWORD=root -d mysql
	
17.) we can inspect our container using command: docker inspect mysqlDb (it will give complete information of the container like id, created_date, path, args, state, image, name, config, cmd, networks etc)

	for example: docker inspect openjdk
	[
		{
			"Id": "sha256:9b448de897d211c9e0ec635a485650aed6e28d4eca1efbc34940560a480b3f1f",
			"RepoTags": [
				"openjdk:latest"
			],
			"RepoDigests": [
				"openjdk@sha256:9b448de897d211c9e0ec635a485650aed6e28d4eca1efbc34940560a480b3f1f"
			],
			"Parent": "",
			"Comment": "",
			"Created": "2023-02-08T19:46:03.323166355Z",
			"DockerVersion": "27.2.0",
			"Author": "",
			"Config": {
				"Hostname": "",
				"Domainname": "",
				"User": "",
				"AttachStdin": false,
				"AttachStdout": false,
				"AttachStderr": false,
				"Tty": false,
				"OpenStdin": false,
				"StdinOnce": false,
				"Env": [
					"PATH=/usr/java/openjdk-18/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
					"JAVA_HOME=/usr/java/openjdk-18",
					"LANG=C.UTF-8",
					"JAVA_VERSION=18.0.2.1"
				],
				"Cmd": [
					"jshell"
				],
				"Image": "",
				"Volumes": null,
				"WorkingDir": "",
				"Entrypoint": null,
				"OnBuild": null,
				"Labels": null
			},
			"Architecture": "amd64",
			"Os": "linux",
			"Size": 245563341,
			"GraphDriver": {
				"Data": null,
				"Name": "overlayfs"
			},
			"RootFS": {
				"Type": "layers",
				"Layers": [
					"sha256:9cd9df9ffc972e9abc946d855162ef0c40dff9a89f10c962b7920154a3d943d8",
					"sha256:077bff59ce5723e3c7d78bdf4fd8b10d72f6f8474b97cdb9323816aa5d8314a6",
					"sha256:56285d9a776094205dc0b66078bf0719f50c734a00754292e6fcbd13b17f5155"
				]
			},
			"Metadata": {
				"LastTagTime": "2024-10-02T19:07:23.708653572Z"
			}
		}
	]

18.) to execute mysql use command: docker exec -it mysqlDb bash (then give mysql -p for entering password and type password root which is previously set and hit enter)  

	bash-5.1# mysql -p
	Enter password:
	Welcome to the MySQL monitor.  Commands end with ; or \g.
	Your MySQL connection id is 8
	Server version: 9.0.1 MySQL Community Server - GPL

	Copyright (c) 2000, 2024, Oracle and/or its affiliates.

	Oracle is a registered trademark of Oracle Corporation and/or its
	affiliates. Other names may be trademarks of their respective
	owners.

	Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

	mysql> show databases;
	+--------------------+
	| Database           |
	+--------------------+
	| information_schema |
	| mysql              |
	| performance_schema |
	| sys                |
	+--------------------+
	4 rows in set (0.01 sec)

	mysql> exit
	Bye
	bash-5.1# exit
	exit
	
19.) to pull nginx server use command: docker pull nginx (nginx is a server for hosting images)

	here you can learn all command in docker hub link: https://hub.docker.com/_/nginx

20.) to start nginx server use command: docker run --name nginxServer -d -p 8080:80 nginx (-p for port colon for reference)

	73544ae0ea7d667df2fcc6c973b8bdf783bad06058365d1d9f887c0549016266

21.) to verify this nginx server is running or not open chrome browser and search localhost:8080 (it will running)

22.) to stop running container use command: docker stop container_name or container_id
	for example: docker stop javaContainer
	javaContainer (container is stopped)
	
	for example: docker stop 73544ae0ea7d (using nginx container id)
	73544ae0ea7d (container is stopped)
	
	or
	
	for example: docker stop 735 (using nginx container id) (sort id also it will get)
	735 (container is stopped)
	
23.) to remove container use command: docker rm container_name or container_id
	for example: docker rm mysqlDb or docker rm eb
	
24.) to remove multiple container in one command use command: docker rm container_id1 container_id2 . . .

25.) to remove images from docker use command: docker remove repository_name
	for example: docker rmi nginx
	Untagged: nginx:latest
	Deleted: sha256:b5d3f3e104699f0768e5ca8626914c16e52647943c65274d8a9e63072bd015bb
	
26.) to restart docker container use command: docker restart conatiner_name

27.) to check docker log for specific container use command: docker logs javaContainer

28.) example running python program on docker:
	
	cmd:> docker search python
	
		NAME                       DESCRIPTION                                     STARS     OFFICIAL
		python                     Python is an interpreted, interactive, objec…   9835      [OK]
		circleci/python            Python is an interpreted, interactive, objec…   90
		cimg/python                                                                20
		bitnami/python             Bitnami container image for Python              29
		paketobuildpacks/python                                                    0
		okteto/python                                                              0
		appsvc/python                                                              3
		opensuse/python            openSUSE base image with python                 0
		ubuntu/python              A chiselled Ubuntu rock with the Python runt…   15
		saagie/python              Repo for python jobs                            0
		demisto/python             The Demisto base python image                   5
		arm64v8/python             Python is an interpreted, interactive, objec…   48
		amd64/python               Python is an interpreted, interactive, objec…   6
		corpusops/python           https://github.com/corpusops/docker-images/     1
		arm32v7/python             Python is an interpreted, interactive, objec…   69
		qbtrade/python             python 3.6.5 with requirements last update s…   0
		revolutionsystems/python   Optimized Python Images                         20
		kubeless/python                                                            0
		intel/python                                                               0
		i386/python                Python is an interpreted, interactive, objec…   3
		s390x/python               Python is an interpreted, interactive, objec…   0
		renovate/python            Dockerized python                               0
		ppc64le/python             Python is an interpreted, interactive, objec…   2
		iron/python                Tiny Python Microcontainer                      9
		meetup/python              Common Python tools used at Meetup              0
	
	cmd:> docker pull python (it will download python into your docker machine from docker hub image)
	
	cmd:> make python program in one folder
	
	cmd:> mkdir python_project
	
	cmd:> cd python_project
	
	cmd:> inside folder make Dockerfile 
	
		FROM python  // image name
		WORKDIR /usr/src/myapp  // working directory path which we want to set
		COPY . /usr/src/myapp/   // copy that path where we want to run program

		CMD [ "python3", "main.py" ]  // execute command with file name
	
	cmd:> docker build -t pythonproject .   (build that image using this command it will create docker image with name pythonproject)
	
		(  -t hyphen t is a Tag name which we want to give our image file)
	
	cmd:> docker images
	
		REPOSITORY      TAG       IMAGE ID       CREATED         SIZE
		pythonproject   latest    0bdcfde115f4   8 minutes ago   1.47GB
	
	cmd:> docker ps -a
		CONTAINER ID   IMAGE          COMMAND             CREATED         STATUS                     PORTS     NAMES
		e126db341895   669f0dfc39ef   "python3 main.py"   8 minutes ago   Exited (0) 8 minutes ago             pythonProject
	
	cmd:> docker run --name pythonProject pythonproject  (then we can run that image where our docker script is running and it will execute python program)
	
		hello world  (python code output)
		
		if image name same we can run same python image with different different image name
		
		docker run --name pythonProject11 pythonproject
	
29.)  example running spring boot program on docker:

	cmd:> docker search java
	
		NAME                        DESCRIPTION                                     STARS     OFFICIAL
		java                        DEPRECATED; use "openjdk" (or other JDK impl…   2008      [OK]
		bitnami/java                Bitnami container image for Java                28
		circleci/java               This image is for internal use                  2
		rightctrl/java              Oracle Java                                     3
		paketobuildpacks/java                                                       0
		vulhub/java                 Java every minor versions.                      3
		appsvc/java                                                                 0
		odpks/java                                                                  0
		navikt/java                 java                                            0
		islandora/java              Base image for services running on Java.        1
		alpine/java                 Repo containing the build scripts to produce…   1
		iron/java                   Small Java Image                                12
		hostingminecraft/java       Java images for hosting-minecraft.pro           0
		frekele/java                docker run --rm --name java frekele/java        12
		cfidentity/java                                                             1
		skynodehost/java            Java for Pterodactyl eggs                       0
		renovate/java               Dockerized Java                                 1
		adorsys/java                Java Runtime Image                              0
		tmvdl/java                  A Docker image to build Java projects           1
		deprecateddockerfile/java   Trusted automated Java (http://java.com/) Bu…   94
		blacklabelops/java          Java Base Images.                               8
		submitty/java               Official Repository for Submitty Java Images    0
		dwolla/java                 Dwolla’s custom Java image                      1
		hypertrace/java                                                             1
		jeanblanchard/java          Minimal Alpine Linux image with Oracle Java     47
		
	cmd:> docker pull openjdk  (java command is deprecated so use openjdk then java image will pull from docker hub)
	
		Using default tag: latest
		latest: Pulling from library/openjdk
		57b698b7af4b: Download complete
		95a27dbe0150: Download complete
		197c1adcd755: Download complete
		Digest: sha256:9b448de897d211c9e0ec635a485650aed6e28d4eca1efbc34940560a480b3f1f
		Status: Downloaded newer image for openjdk:latest
		docker.io/library/openjdk:latest

		What's next:
			View a summary of image vulnerabilities and recommendations → docker scout quickview openjdk
	
	cmd:> make spring boot program in one folder
	
	cmd:> mkdir spring_project
	
	cmd:> cd spring_project
	
	cmd:> inside folder make Dockerfile  (place docker file where jar file will present)
	
		FROM openjdk

		WORKDIR /usr/src/myapp

		COPY . /usr/src/myapp/

		CMD [ "java", "-jar", "h2-0.0.1-SNAPSHOT.jar" ]

		EXPOSE 8080  // specify port
	
	cmd:> docker build -t bootimage .
	
		[+] Building 0.0s (0/0)  docker:desktop-linux
		2024/10/10 00:59:12 http2: server: error reading preface from client //./pipe/dockerDesktopLinuxEngine: file has already[+] Building 6.8s (8/8) FINISHED                                                                   docker:desktop-linux
		 => [internal] load build definition from Dockerfile                                                               0.0s
		 => => transferring dockerfile: 169B                                                                               0.0s
		 => [internal] load metadata for docker.io/library/openjdk:latest                                                  0.0s
		 => [internal] load .dockerignore                                                                                  0.0s
		 => => transferring context: 2B                                                                                    0.0s
		 => [1/3] FROM docker.io/library/openjdk:latest@sha256:9b448de897d211c9e0ec635a485650aed6e28d4eca1efbc34940560a48  2.9s
		 => => resolve docker.io/library/openjdk:latest@sha256:9b448de897d211c9e0ec635a485650aed6e28d4eca1efbc34940560a48  2.9s
		 => [internal] load build context                                                                                  2.4s
		 => => transferring context: 82.52MB                                                                               2.4s
		 => [2/3] WORKDIR /usr/src/myapp                                                                                   0.2s
		 => [3/3] COPY . /usr/src/myapp/                                                                                   0.3s
		 => exporting to image                                                                                             3.3s
		 => => exporting layers                                                                                            2.7s
		 => => exporting manifest sha256:d2e04adce08e1d46b6d615f798b6851757d1bf722cb67a20f71b0636d0c5b84e                  0.0s
		 => => exporting config sha256:0ae7472f3047edc37bc38aa8b8f5d7d6b38085f7c3b54a4831e9fac0fa06ebaf                    0.0s
		 => => exporting attestation manifest sha256:8f7475d050c1ba485ea9bef122c2df4eda01d2bb9a4f26fdb08b6970bb12881b      0.0s
		 => => exporting manifest list sha256:b95d4333bf57f1c8ee78c8f33a48c872d8dc6fca484fabba03f74aa6a1bf2a92             0.0s
		 => => naming to docker.io/library/bootimage:latest                                                                0.0s
		 => => unpacking to docker.io/library/bootimage:latest                                                             0.5s

		View build details: docker-desktop://dashboard/build/desktop-linux/desktop-linux/4ytnzh3v79prgkagfv28be3sq

		What's next:
			View a summary of image vulnerabilities and recommendations → docker scout quickview
	
	cmd:> docker run --name bootProject -it -d bootimage
	
		999c3facf557a6c98997971f75dcb07997d38ffdada464d029b6f5e3c057e010
	
	cmd:> docker ps  (image is running but if we want to execute project on server then specify the port while running)
	
		CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS      NAMES
		999c3facf557   bootimage   "java -jar h2-0.0.1-…"   38 seconds ago   Up 38 seconds   8080/tcp   bootProject
		
	cmd:> docker logs bootProject (logs will show running projects)

		  .   ____          _            __ _ _
		 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
		( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
		 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
		  '  |____| .__|_| |_|_| |_\__, | / / / /
		 =========|_|==============|___/=/_/_/_/
		 :: Spring Boot ::                (v2.7.2)

		2024-10-09 19:33:30.002  INFO 1 --- [           main] com.crud.h2.H2Application                : Starting H2Application v0.0.1-SNAPSHOT using Java 18.0.2.1 on 999c3facf557 with PID 1 (/usr/src/myapp/h2-0.0.1-SNAPSHOT.jar started by root in /usr/src/myapp)
		2024-10-09 19:33:30.004  INFO 1 --- [           main] com.crud.h2.H2Application                : No active profile set, falling back to 1 default profile: "default"
		2024-10-09 19:33:30.847  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
		2024-10-09 19:33:30.886  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 33 ms. Found 1 JPA repository interfaces.
		2024-10-09 19:33:31.465  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
		2024-10-09 19:33:31.477  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
		2024-10-09 19:33:31.477  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
		2024-10-09 19:33:31.551  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
		2024-10-09 19:33:31.551  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1489 ms
		2024-10-09 19:33:31.714  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
		2024-10-09 19:33:31.926  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
		2024-10-09 19:33:31.938  INFO 1 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:h2db'
		2024-10-09 19:33:32.108  INFO 1 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
		2024-10-09 19:33:32.204  INFO 1 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
		2024-10-09 19:33:32.337  INFO 1 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
		2024-10-09 19:33:32.431  INFO 1 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
		Hibernate: create table employee (id integer generated by default as identity, age integer not null, name varchar(255), salary float not null, primary key (id))
		2024-10-09 19:33:32.871  INFO 1 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
		2024-10-09 19:33:32.876  INFO 1 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
		2024-10-09 19:33:33.145  WARN 1 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
		2024-10-09 19:33:33.595  INFO 1 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
		2024-10-09 19:33:33.651  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
		2024-10-09 19:33:33.664  INFO 1 --- [           main] com.crud.h2.H2Application                : Started H2Application in 4.068 seconds (JVM running for 4.648)
		
	cmd:> docker stop bootProject (so it will stop and then we have to specify port number so that we can access anywhere till server running)
	
	cmd:> docker run --name bootProject -it -p 8080:8080 -d bootimage
	
		860198fa8d1ca094998cfed0a4f33c2c92b072c9f6840b2378c6eb055663cc8e
		
	cmd:> >docker ps
	
		CONTAINER ID   IMAGE       COMMAND                  CREATED          STATUS          PORTS                    NAMES
		860198fa8d1c   bootimage   "java -jar h2-0.0.1-…"   39 seconds ago   Up 38 seconds   0.0.0.0:8080->8080/tcp   bootProjec
		
	cmd:> docker logs bootProject

  .   ____          _            __ _ _
		 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
		( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
		 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
		  '  |____| .__|_| |_|_| |_\__, | / / / /
		 =========|_|==============|___/=/_/_/_/
		 :: Spring Boot ::                (v2.7.2)

		2024-10-09 19:41:57.474  INFO 1 --- [           main] com.crud.h2.H2Application                : Starting H2Application v0.0.1-SNAPSHOT using Java 18.0.2.1 on 860198fa8d1c with PID 1 (/usr/src/myapp/h2-0.0.1-SNAPSHOT.jar started by root in /usr/src/myapp)
		2024-10-09 19:41:57.476  INFO 1 --- [           main] com.crud.h2.H2Application                : No active profile set, falling back to 1 default profile: "default"
		2024-10-09 19:41:58.386  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
		2024-10-09 19:41:58.427  INFO 1 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 1 JPA repository interfaces.
		2024-10-09 19:41:58.943  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
		2024-10-09 19:41:58.952  INFO 1 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
		2024-10-09 19:41:58.953  INFO 1 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.65]
		2024-10-09 19:41:59.008  INFO 1 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
		2024-10-09 19:41:59.008  INFO 1 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1484 ms
		2024-10-09 19:41:59.154  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
		2024-10-09 19:41:59.366  INFO 1 --- [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
		2024-10-09 19:41:59.378  INFO 1 --- [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:h2db'
		2024-10-09 19:41:59.538  INFO 1 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
		2024-10-09 19:41:59.586  INFO 1 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.10.Final
		2024-10-09 19:41:59.724  INFO 1 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
		2024-10-09 19:41:59.811  INFO 1 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
		Hibernate: create table employee (id integer generated by default as identity, age integer not null, name varchar(255), salary float not null, primary key (id))
		2024-10-09 19:42:00.280  INFO 1 --- [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
		2024-10-09 19:42:00.286  INFO 1 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
		2024-10-09 19:42:00.548  WARN 1 --- [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
		2024-10-09 19:42:00.988  INFO 1 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
		2024-10-09 19:42:01.023  INFO 1 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
		2024-10-09 19:42:01.035  INFO 1 --- [           main] com.crud.h2.H2Application                : Started H2Application in 3.945 seconds (JVM running for 4.337)
		2024-10-09 19:42:16.262  INFO 1 --- [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
		2024-10-09 19:42:16.263  INFO 1 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
		2024-10-09 19:42:16.264  INFO 1 --- [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
		Hibernate: select employee0_.id as id1_0_, employee0_.age as age2_0_, employee0_.name as name3_0_, employee0_.salary as salary4_0_ from employee employee0_
		Getting data : []
		
	cmd:> docker stop bootProject (so it will stop working)
	